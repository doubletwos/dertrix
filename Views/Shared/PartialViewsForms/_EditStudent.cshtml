@model Dertrix.Models.RegisteredUser
<form id="StudentEditForm">
	@Html.AntiForgeryToken()
	@{
		HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
	}
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RegisteredUserId)
        @Html.HiddenFor(model => model.StudentRegFormId)
        @Html.HiddenFor(model => model.RegisteredUserTypeId)
        @Html.HiddenFor(model => model.EnrolmentDate)
        @Html.HiddenFor(model => model.ClassRef)
        @Html.HiddenFor(model => model.ClassId)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.RegUserOrgBrand)
        @Html.HiddenFor(model => model.PgCount)
        @Html.HiddenFor(model => model.FullName)


        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenderId, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GenderId", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReligionId, "Religion", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReligionId", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TribeId, "Tribe", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TribeId", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TribeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, "{0:d MMM yyyy}", new { htmlAttributes = new { @class = "form-control", @id = "test4", type = "text" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer">
            <input type="button" value="Update" class="RegUserOrgButtonColour" id="editstudent" />
            <input type="reset" value="Cancel" class="RegUserOrgButtonColour" data-dismiss="modal" />
        </div>
    </div>
</form>


<script>
	$(document).ready(function () {

			$("#test4").datepicker({
				dateFormat: "dd-mm-yy",
				//changeMonth: true,
				changeYear: true,
                yearRange: "-20:+0",
			});


			$('#StudentEditForm').validate({
				errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
				errorElement: 'div',
				errorPlacement: function (error, e) {
					e.parents('.form-group > div').append(error);
				},
				highlight: function (e) {
					$(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
					$(e).closest('.help-block').remove();
				},
				success: function (e) {
					e.closest('.form-group').removeClass('has-success has-error');
					e.closest('.help-block').remove();
				},
				rules: {
					'FirstName': {
						required: true,
					},
					'LastName': {
						required: true,
					},
					'GenderId': {
						required: true,
					},
					'ReligionId': {
						required: true,
					},
					'TribeId': {
						required: true,
					},
					'DateOfBirth': {
						required: true,
					}
				},

				messages: {
					'FirstName': 'First name is required',
					'LastName': 'Last name is required',
					'GenderId': 'Please enter gender',
					'ReligionId': 'Please select religion',
					'TribeId': 'Please select tribe',
					'DateOfBirth': 'Please enter date of birth'

				}



			});



		$("#editstudent").on("click", function () {
			if ($("#StudentEditForm").valid()) {
				var data = $("#StudentEditForm").serialize();
				$.ajax({
					type: "POST",
					url: "/RegisteredUsers/Edit",
					data: data,
					success: function (response) {
						alert("Student details updated");
						$("#myModal").modal("hide");
						$("#StudentEditForm")[0].reset();
						window.location.reload();
					}
				})
			}
		})






	})

</script>



