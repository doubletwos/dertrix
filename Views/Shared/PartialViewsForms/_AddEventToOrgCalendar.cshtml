@model Dertrix.ViewModels.AddNewOrgSchCalViewModel
<script src="~/Scripts/jquery-3.6.0.min.js"></script>

<a href="#" class="RegUserOrgButtonColour" data-toggle="modal" data-target="#mycreateevent">
	<i class="fa fa-pencil-square fa-2x" aria-hidden="true"></i>
	Add event
</a>
<div class="modal fade" id="mycreateevent">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<a href="#" class="close" data-dismiss="modal">&times;</a>
				<h3 class="modal-title">Add New Event</h3>
			</div>
			<div class="modal-body">
				<form id="myCreateEventForm">
					@Html.AntiForgeryToken()
					@{
						HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
					}
                    <div class="form-horizontal">
                        @Html.HiddenFor(model => model.OrgSchCalendar.OrgId)
                        @Html.HiddenFor(model => model.OrgSchCalendar.CreatorId)
                        @Html.HiddenFor(model => model.OrgSchCalendar.CreatorFullName)
                        @Html.HiddenFor(model => model.OrgSchCalendar.CreationDate)
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

           

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.CalendarCategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(x => x.OrgSchCalendar.CalendarCategoryId, new SelectList(Model.CalendarCategorys, "CalendarCategoryId", "CategoryName"), "Please Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.CalendarCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrgSchCalendar.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.EventDate, "Event Date", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrgSchCalendar.EventDate, "{0:d MMM yyyy}", new { htmlAttributes = new { @class = "form-control datepicker", type = "text" } })
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.EventDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.EventTime, "Event Time", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrgSchCalendar.EventTime, "{0:d MMM yyyy}", new { htmlAttributes = new { @class = "form-control bs-timepicker", type = "text" } })
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.EventTime, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.IsRecurring,"Is Recurring ?", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.OrgSchCalendar.IsRecurring, new SelectList(new[] { new { Value = "", Text = "Please select" }, new { Value = "true", Text = "Yes" }, new { Value = "false", Text = "No" }, }, "Value", "Text", new { htmlAttributes = new { @id = "IsRecurring", @class = "form-control" } }))
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.IsRecurring, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.Frequency, htmlAttributes: new { @id = "frequency0", @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrgSchCalendar.Frequency, new { htmlAttributes = new { @id = "frequency1", @class = "control-label col-md-2" } })
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.Frequency, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.SendAsEmail,"Send As Email ?", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.OrgSchCalendar.SendAsEmail, new SelectList(new[] { new { Value = "", Text = "Please select" }, new { Value = "true", Text = "Yes" }, new { Value = "false", Text = "No" }, }, "Value", "Text"))
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.SendAsEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgSchCalendar.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.OrgSchCalendar.Description, new { htmlAttributes = new { rows = "20", cols = "20", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OrgSchCalendar.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsSelected, "Organisation Recipients")
                            <div style="height: 150px; width: 450px; overflow: auto; border: double; margin-left:120px;">

                                @for (int i = 0; i < Model.OrgGroups.Count; i++)
                                {
                                    @Html.HiddenFor(model => model.OrgGroups[i].OrgGroupId)
                                    @Html.HiddenFor(model => model.OrgGroups[i].GroupName)
                                    @:&nbsp;    @Html.CheckBoxFor(model => model.OrgGroups[i].IsSelected)
                                    @:&nbsp;	@Html.LabelFor(model => model.OrgGroups[i].IsSelected, Model.OrgGroups[i].GroupName)
                                    @:&nbsp;	@Html.HiddenFor(model => model.OrgGroups[i].IsSelected, Model.OrgGroups[i].OrgGroupId)
                                    @:&nbsp;	@Html.HiddenFor(model => model.OrgGroups[i].IsSelected, Model.OrgGroups[i].OrgId)
                                    <br />
                                }
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input type="reset" value="Cancel" class="RegUserOrgButtonColour" data-dismiss="modal" id="cancel" />
                            <input type="button" value="Create Event" class="RegUserOrgButtonColour" id="btnSubmit" />
                        </div>
                    </div>
</form>
			</div>
		</div>
	</div>
</div>




<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
		$("#frequency0").hide();
		$("#frequency1").hide();

	  $(function () {
		  $("#OrgSchCalendar_IsRecurring").change(function () {

			if ($(this).val() == 'true') {
				$("#frequency0").slideDown(1000);
				$("#frequency1").slideDown(1000);

			}
			if ($(this).val() == 'false') {
				$("#frequency0").slideUp(1000);
				$("#frequency1").slideUp(1000);

			}

		 });
	  });

		$(function () {
			var dateToday = new Date();
			$(".datepicker").datepicker({
				dateFormat: "dd-mm-yy",
				changeMonth: true,
				changeYear: true,
				yearRange: "-0:+15",
				minDate : dateToday
			});

			$(".bs-timepicker").timepicker();

		});

		$("#btnSubmit").on("click", function () {
			if ($("#myCreateEventForm").valid()) {
				var data = $("#myCreateEventForm").serialize();
				$.ajax({
					type: "POST",
					url: '@Url.Action("Create", "OrgSchCalendars")',
					data: data,
					success: function (response) {
                        toastr.options.onHidden = function () {
                            window.location.reload();
						}
                        toastr.options.positionClass = "toast-bottom-full-width";
						toastr.options.progressBar = true;
                        toastr.options.timeout = 0;
                        toastr.options.extendedTimeOut = 0;
                        toastr.options.fadeOut = 500;
						toastr.options.tapToDismiss = false;
						toastr.success("Event added successfully");
						$("#mycreateevent").modal("hide");
                        $("#myCreateEventForm")[0].reset();
					},
					error: function (response) {
                        toastr.options.positionClass = "toast-bottom-full-width";
                        toastr.options.progressBar = true;
                        toastr.options.timeout = 0;
                        toastr.options.extendedTimeOut = 0;
                        toastr.options.fadeOut = 500;
                        toastr.options.tapToDismiss = false;
                        toastr.error("Oops, There has been a problem, the system adminstrators have been notified.");
						$("#mycreateevent").modal("hide");
                        $("#myCreateEventForm")[0].reset();
                    }
				
				})
			}
		})
	});

</script>

<script>
	$(document).ready(function () {
		$('#myCreateEventForm').validate({
			errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
			errorElement: 'div',
			errorPlacement: function (error, e) {
				e.parents('.form-group > div').append(error);
			},
			highlight: function (e) {
				$(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
				$(e).closest('.help-block').remove();
			},
			success: function (e) {
				e.closest('.form-group').removeClass('has-success has-error');
				e.closest('.help-block').remove();
			},
			rules: {
				'OrgSchCalendar.CalendarCategoryId': {
					required: true,
				},
				'OrgSchCalendar.Name': {
					required: true,
				},
				'OrgSchCalendar.EventDate': {
					required: true,
				
					
				},
				'OrgSchCalendar.IsRecurring': {
					required: true,
				},
				'OrgSchCalendar.SendAsEmail': {
					required: true,
				}

			},
			messages: {
				'OrgSchCalendar.CalendarCategoryId': 'Please select event category',
				'OrgSchCalendar.Name': 'Please enter name',
				'OrgSchCalendar.EventDate': 'Please enter event date',
				'OrgSchCalendar.IsRecurring': 'Please select Yes or No',
				'OrgSchCalendar.SendAsEmail': 'Please select Yes or No'

			}
		});
	});

</script>
