@model Dertrix.Models.Subject
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<a href="#" class="RegUserOrgButtonColour" data-toggle="modal" data-target="#myModalAddSubject">
	<i class="fa fa-plus fa-2x" aria-hidden="true"></i>
	Add Subject
</a>
<div class="modal fade" id="myModalAddSubject">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<a href="#" class="close" data-dismiss="modal">&times;</a>
				<h3 class="modal-title">Add new subject </h3>
			</div>
			<div class="modal-body">
				<form id="mySubjectForm">
					@Html.AntiForgeryToken()
					@{
						HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
					}
                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.SubjectName, "Subject Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClassId, "Class", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ClassId", null, "Please select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClassTeacherId, "Teacher", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ClassTeacherId", null, "Please select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClassTeacherId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.First_Term_Exam_MaxGrade, "1st Term Credits", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.First_Term_Exam_MaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.First_Term_Exam_MaxGrade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Second_Term_Exam_MaxGrade, "2nd Term Credits", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Second_Term_Exam_MaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Second_Term_Exam_MaxGrade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Third_Term_Exam_MaxGrade, "3rd Term Credits", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Third_Term_Exam_MaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Third_Term_Exam_MaxGrade, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.First_Term_Test_MaxGrade, "1st Term Credits", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.First_Term_Test_MaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.First_Term_Test_MaxGrade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Second_Term_Test_MaxGrade, "2nd Term Credits", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Second_Term_Test_MaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Second_Term_Test_MaxGrade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Third_Term_Test_MaxGrade, "3rd Term Credits", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Third_Term_Test_MaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Third_Term_Test_MaxGrade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="modal-footer">
                            <input type="reset" value="Cancel" class="RegUserOrgButtonColour" data-dismiss="modal" />
                            <input type="button" value="Add Subject" class="RegUserOrgButtonColour" id="btnSubmit5" />
                        </div>
                    </div>
				</form>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script>

    $(document).ready(function () {
        $("#btnSubmit5").on("click", function () {
            if ($("#mySubjectForm").valid()) {
                var data = $("#mySubjectForm").serialize();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Create", "Subjects")',

                    data: data,
                    success: function (response) {
                        toastr.options.onHidden = function () {
                            window.location.reload();
                        }
                        toastr.options.positionClass = "toast-top-left";
                        toastr.options.progressBar = true;
                        toastr.options.timeout = 1000;
                        toastr.options.extendedTimeOut = 0;
                        toastr.options.fadeOut = 500;
                        toastr.options.tapToDismiss = false;
                        toastr.success("Subject added successfully");
                        $("#myModalAddSubject").modal("hide");
                        $("#mySubjectForm")[0].reset();
                    },
                    error: function (response) {
                        toastr.options.positionClass = "toast-top-left";
                        toastr.options.progressBar = true;
                        toastr.options.timeout = 0;
                        toastr.options.extendedTimeOut = 0;
                        toastr.options.fadeOut = 900;
                        toastr.options.tapToDismiss = false;
                        toastr.error("Oops there has been a problem, the system admins have been notified.");
                        $("#myModalAddSubject").modal("hide");
                        $("#mySubjectForm")[0].reset();
                    }
               })
            }
		})
   });
</script>