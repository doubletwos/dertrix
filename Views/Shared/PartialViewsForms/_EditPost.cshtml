@model Dertrix.ViewModels.EditPostViewModel
<form id="PostEditForm">
    @Html.AntiForgeryToken()
    @{
        HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    }
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PostId)
        @Html.HiddenFor(model => model.OrgId)
        @Html.HiddenFor(model => model.PostCreatorId)
        @Html.HiddenFor(model => model.PostCreationDate)


        <div class="form-group">
            @Html.LabelFor(model => model.PostTopicId, "Topic", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PostTopicId", null, htmlAttributes: new { @id = "", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PostTopicId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PostSubject, "Subject",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostSubject, new { htmlAttributes = new { @id = "", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostSubject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PostExpirtyDate,"Expiry Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostExpirtyDate, new { htmlAttributes = new { @class = "form-control datepicker", type = "text" } })
                @Html.ValidationMessageFor(model => model.PostExpirtyDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PostContent,"Content", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PostContent, new { htmlAttributes = new { @class = "form-control PostContent" } })
                @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.SendAsEmail, "Send As Email?", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.SendAsEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SendAsEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsSelected, "Organisation Groups", htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="height: 150px; width: 450px; overflow: auto; border: double; margin-left:120px;">
                @for (int i = 0; i < Model.OrgGroups.Count; i++)
                {
                    @Html.HiddenFor(model => model.OrgGroups[i].OrgGroupId)
                    @Html.HiddenFor(model => model.OrgGroups[i].GroupName)
                    @:&nbsp;    @Html.CheckBoxFor(model => model.OrgGroups[i].IsSelected)
                    @:&nbsp;	@Html.LabelFor(model => model.OrgGroups[i].IsSelected, Model.OrgGroups[i].GroupName)
                    @:&nbsp;	@Html.HiddenFor(model => model.OrgGroups[i].IsSelected, Model.OrgGroups[i].OrgGroupId)
                    @:&nbsp;	@Html.HiddenFor(model => model.OrgGroups[i].IsSelected, Model.OrgGroups[i].OrgId)
                    <br />
                }
            </div>
        </div>
    </div>
</form>
<script>
    $(document).ready(function () {
        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-0:+10",
            });
        })
        $(function () {
            $('#PostContent').wysiwyg({
                toolbar: [
                    //['mode'],
                    //['operations', ['undo', 'rendo', 'cut', 'copy', 'paste']],
                    //['styles'],
                    //['fonts', ['select', 'size']],
                    ['text', ['bold', 'italic', 'underline', '/*strike*/', '/*subscript*/', '/*superscript*/', '/*font-color*/', '/*bg-color*/']],
                    ['align', ['left', 'center', 'right', 'justify']],
                    ['lists', ['unordered', 'ordered', '/*indent*/', '/*outdent*/']],
                    //['components', ['table']],
                    //['intervals', ['line-height', 'letter-spacing']],
                    ['insert', ['/*emoji*/', 'link', '/*image*/', '/*video*/', '/*symbol*/']],
                    //    ['special', ['print', 'unformat', 'visual', 'clean']],
                ],
                fontSizes: ['8px', ... '48px'],
                fontSizeDefault: '12px',
                fontFamilies: ['Open Sans', 'Arial', 'Times New Roman', 'Verdana'],
                fontFamilyDefault: 'Open Sans',
                mode: 'editor',
                highlight: true,
                debug: false


            });
        })
    })
</script>

<script>
    $(document).ready(function () {
        $('#PostEditForm').validate({
            ignore: ":hidden:not(textarea), [contenteditable='true']:not([name])",
            errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('.form-group > div').append(error);
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.form-group').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },
            rules: {
                'PostTopicId': {
                    required: true,
                },
                'PostSubject': {
                    required: true,
                },
                'PostContent': {
                    required: true,
                },
                'SendAsEmail': {
                    required: true,
                }

            },
            messages: {
                'PostTopicId': 'Please select appropriate topic',
                'PostSubject': 'Please enter subject',
                'PostContent': 'Post can not be empty',
                'SendAsEmail': 'Please select an option',
            }

        });
        $("#edtSubmit").click(function () {
            if ($("#PostEditForm").valid()) {
				var data = $("#PostEditForm").serialize();
				$.ajax({
					type: "POST",
					url: '@Url.Action("Edit", "Posts")',
					data: data,
					success: function (response) {
						alert("Post Updated");
						$("#OrgpostEditModal1").modal("hide");
						$("#PostEditForm")[0].reset();
						window.location.reload();
					}
				})
			}


	   })
    });
</script>