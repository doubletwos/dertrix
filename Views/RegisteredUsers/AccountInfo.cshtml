@model Dertrix.Models.RegisteredUser
@{
	ViewBag.Title = "AccountInfo";
}



@using (Html.BeginForm("UpdateAccountInfo", "RegisteredUsers", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.RegisteredUserId)
		@Html.HiddenFor(model => model.FullName)
		@Html.HiddenFor(model => model.OtherNames)
		@Html.HiddenFor(model => model.LoginErrorMsg)
		@Html.HiddenFor(model => model.RegisteredUserTypeId)
		@Html.HiddenFor(model => model.PrimarySchoolUserRoleId)
		@Html.HiddenFor(model => model.SecondarySchoolUserRoleId)
		@Html.HiddenFor(model => model.NurserySchoolUserRoleId)
		@Html.HiddenFor(model => model.SelectedOrg)
		@Html.HiddenFor(model => model.ClassId)
		@Html.HiddenFor(model => model.ClassRef)
		@Html.HiddenFor(model => model.GenderId)
		@Html.HiddenFor(model => model.ReligionId)
		@Html.HiddenFor(model => model.RelationshipId)
		@Html.HiddenFor(model => model.StudentRegFormId)
		@Html.HiddenFor(model => model.IsTester)
		@Html.HiddenFor(model => model.TribeId)
		@Html.HiddenFor(model => model.DateOfBirth)
		@Html.HiddenFor(model => model.EnrolmentDate)
		@Html.HiddenFor(model => model.CreatedBy)
		@Html.HiddenFor(model => model.InviteKey)
		@Html.HiddenFor(model => model.RegUserOrgBrand)
		@Html.HiddenFor(model => model.TempIntHolder)
		@Html.HiddenFor(model => model.PgCount)
		@Html.HiddenFor(model => model.InviteSentDate)
		@Html.HiddenFor(model => model.IsRegistered)
		@Html.HiddenFor(model => model.CountOfInvite)
		@Html.HiddenFor(model => model.RegisteredDate)




		<div class="form-group">
			@Html.LabelFor(model => model.TitleId, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("TitleId", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.TitleId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.Password } })
				@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.ConfirmPassword } })
				@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
			</div>
		</div>





		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}



@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/toastr.min.js"></script>
	<link href="~/Content/toastr.min.css" rel="stylesheet" />
	@if (TempData["Message"] != null)
	{
		<script type="text/javascript">toastr.success("@TempData["Message"]");</script>

	}
}









